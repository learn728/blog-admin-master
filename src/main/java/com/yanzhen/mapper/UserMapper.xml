<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!--mybatis对xml的约束-->

<mapper namespace="com.yanzhen.mapper.UserDao"><!--对应dao接口-->

    <resultMap id="UserMap" type="user"><!--resultMap用于封装结果，和resultType只能用其一-->
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="nick_name" property="nickName"/>
        <result column="avatar" property="avatar"/>
        <result column="email" property="email"/>
        <result column="create_date" property="createDate"/>
        <result column="status" property="status"/>
        <result column="type1" property="type1"/>
    </resultMap>

    <insert id="create" keyProperty="id" useGeneratedKeys="true" parameterType="user">
        insert into tb_user(user_name,password,nick_name,avatar,email,create_date,status,type1)
        values(#{userName},#{password},#{nickName},#{avatar},#{email},now(),#{status},#{type1})
    </insert>

    <insert id="create2" keyProperty="id" useGeneratedKeys="true" parameterType="collect">
        insert into tb_collect(userId,articleId)
        values(#{userId},#{articleId})
    </insert>
<!--查询是否有收藏记录-->
    <select id="query1"  resultType="collect">
        select * from tb_collect where userId=#{userId} and articleId=#{articleId}
    </select>
<!--查询用户收藏的文章-->
    <select id="findTitle"  parameterType="int" resultType="article">
        select a.title, a.id, a.title_img , a.summary, a.create_date from tb_user u,tb_collect c ,tb_article a where c.userId = u.id and u.id = #{id} and c.articleId = a.id
    </select>

    <delete id="delete" parameterType="map">
        delete from tb_user
        <include refid="UserFindCriteria"></include>
    </delete>
    <!--取消收藏-->
    <delete id="delete1" parameterType="map">
        delete from tb_collect
        where  id = #{id}
    </delete>

    <update id="update" parameterType="map">
        update tb_user
        <include refid="UserUpdateCriteria"></include>
        <include refid="UserFindCriteria"></include>
    </update>

    <update id="updatePwd" parameterType="user">
        update tb_user
        set user_name = #{userName} , password = #{password}
        where id = #{id}
    </update>
    
    <select id="query" parameterType="map" resultMap="UserMap">
        select * from tb_user
        <include refid="UserFindCriteria"></include>
    </select>

    <select id="login" parameterType="map" resultMap="UserMap">
        select * from tb_user where user_name = #{userName} and password = #{password} and type1 = 1
    </select>

    <select id="login1" parameterType="map" resultMap="UserMap">
        select * from tb_user where user_name = #{userName} and password = #{password} and type1 = 9
    </select>

    <select id="detail" parameterType="map" resultMap="UserMap">
        select * from tb_user
        <include refid="UserFindCriteria"></include>
    </select>

    <select id="count" parameterType="map" resultType="int">
        select count(*) from tb_user
        <include refid="UserFindCriteria"></include>
    </select>

    <sql id="Login">
        <where>
            <if test="userName != null and userName != ''">and user_name = #{userName}</if>
            <if test="password != null and password != ''">and password = #{password}</if>
        </where>
    </sql>

    <!-- 查询通用片段 -->
    <sql id="UserFindCriteria">
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="userName != null and userName != ''">and user_name like concat('%', #{userName},'%')</if>
            <if test="password != null and password != ''">and password = #{password}</if>
            <if test="nickName != null and nickName != ''">and nick_name like concat('%', #{nickName},'%')</if>
            <if test="status != null and status != ''">and status = #{status}</if>
            <if test="email != null and email != ''">and email = #{email}</if>
        </where>
    </sql>

    <!-- 修改通用片段 -->
    <sql id="UserUpdateCriteria">
        <set>
            <if test="updateUserName != null and updateUserName != ''">user_name = #{updateUserName},</if>
            <if test="updatePassword != null and updatePassword != ''">password = #{updatePassword},</if>
            <if test="updateNickName != null and updateNickName != ''">nick_name = #{updateNickName},</if>
            <if test="updateAvatar != null and updateAvatar != ''">avatar = #{updateAvatar},</if>
            <if test="updateEmail != null and updateEmail != ''">email = #{updateEmail},</if>
            <if test="updateStatus != null and updateStatus != ''">status = #{updateStatus},</if>
            <if test="updateType1 != null and updateType1 != ''">type1 = #{updateType1},</if>
        </set>
    </sql>

</mapper>